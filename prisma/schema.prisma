// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Job {
    id           String         @id @default(cuid())
    title        String
    thumbnail    String?
    desc         String?        @db.Text
    summary      String?        @db.Text
    skills       Json[]         @default([])
    expiredAt    DateTime?
    start_salary Int?
    max_salary   Int?
    rate         SalaryRate     @default(MONTH)
    experience   Int            @default(0)
    type         JobType        @default(FULL_TIME)
    createdAt    DateTime       @default(now())
    updatedAt    DateTime       @updatedAt
    applications Applications[]
}

enum JobType {
    FULL_TIME
    PART_TIME
    FREELANCE
}

enum SalaryRate {
    HOUR
    MONTH
    YEAR
}

model JobSeeker {
    id           String            @id @default(cuid())
    name         String
    image_url    String?
    phone        String
    email        String
    state        String
    country      String
    city         String
    address      String
    cvUrl        String
    category     JobSeekerCategory @default(GENERAL)
    description  String?           @db.Text
    createdAt    DateTime          @default(now())
    updatedAt    DateTime          @updatedAt
    applications Applications[]
}

model Applications {
    id          String            @id @default(cuid())
    jobSeeker   JobSeeker         @relation(fields: [jobSeekerId], references: [id], onDelete: Cascade)
    job         Job               @relation(fields: [jobId], references: [id], onDelete: Cascade)
    jobSeekerId String
    jobId       String
    status      ApplicationStatus @default(PENDING)
    createdAt   DateTime          @default(now())
    updatedAt   DateTime          @updatedAt
}

enum ApplicationStatus {
    ACCEPTED
    PENDING
    DECLINED
}

enum JobSeekerCategory {
    PREMIUM
    GENERAL
}

model Enquiry {
    id        String   @id @default(cuid())
    name      String
    email     String   @unique
    phone     String?
    message   String
    service   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// model SiteSetting {
//     id  String  @id
// }

model GameEvent {
    id           String   @id @default(cuid())
    title        String
    link         String
    thumbnail    String?
    createdAt    DateTime @default(now())
    expiredAt    DateTime
    prize        Int      @default(0)
    currencyCode String?
    Game         Game?    @relation(fields: [gameId], references: [id])
    gameId       String?
}

model Game {
    id        String      @id @default(cuid())
    title     String
    thumbnail String?
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt
    events    GameEvent[]
}

model CompanyEnquiry {
    id        String             @id @default(cuid())
    name      String
    email     String
    phone     String?
    message   String
    data      Json?
    type      CompanyEnquiryType
    createdAt DateTime           @default(now())
    updatedAt DateTime           @updatedAt
}

enum CompanyEnquiryType {
    GENERAL
    MANAGMENT
    HR
    DEVELOPMENT
    DESIGN
}


model SiteConfig {
    id String  @id @default(cuid())
    email   String
    phone   String?
    city    String?
    state   String?
    country String?
    address String?
    baseCur String? @default("USD")
}

model Currency {
    id String @id @default(cuid())
    name    String
    
}
